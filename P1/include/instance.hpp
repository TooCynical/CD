#ifndef INSTANCE_HPP
#define INSTANCE_HPP

#include <stdlib.h>
#include <vector>
#include <set>

#include "vertex.hpp"
#include "util.hpp"

using namespace std;

/* Forward declarations */
class Vertex;

class Instance {
    private:
        int _n_terminals;       // Number of given terminals.
        int _n_vertices;        // Number of vertices in the Hanan grid 
                                // generated by the terminals.

        vector<Vertex*> _V;     // References to all vertices in 
                                // lexicographical order.
        Vertex**** _hanan_grid; // References to all vertices, ordered according
                                // to the Hanan grid.
        Vertex** _terminals;    // References to all terminals.

        set<int> _x_values;     // All occuring x-coordinates of terminals.
        set<int> _y_values;     // All occuring y-coordinates of terminals.
        set<int> _z_values;     // All occuring z-coordinates of terminals.
        int _nx;                // Size of _x_values
        int _ny;                // Size of _y_values
        int _nz;                // Size of _z_values

        Result SetTerminals(int **term_locs);
        Result SetXYZ(int **term_locs);
        Result SetVertices();
        Result SetHananGrid();
        Result SetNeighbours();

    public:
        /* Constructor */
        Instance(int n, int **term_locs);

        /* Getters / Setters */
        vector<Vertex*> *GetV();
        Vertex **GetTerminals();
        int GetNTerminals();
        int GetNVertices();

        /* IO-functions for testing */
        void PrintTerminals();
        void PrintVertices();

};

#endif